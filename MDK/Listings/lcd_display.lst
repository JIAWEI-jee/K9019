C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       01/20/2021 11:03:33 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD_DISPLAY
OBJECT MODULE PLACED IN .\output\lcd_display.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\HAEDWARE\HT1621B\lcd_display.c LARGE OPTIMIZE(8,SPEED) BROW
                    -SE INCDIR(..\source;..\HAEDWARE\Flash;..\HAEDWARE\DELAY;..\HAEDWARE\HT1621B;..\HAEDWARE\Uart;..\HAEDWARE\Key;..\HAEDWARE
                    -\Timer;..\HAEDWARE\Pwm;..\HAEDWARE\ADC;..\HAEDWARE\WDT;..\HAEDWARE\product) DEBUG OBJECTEXTEND PRINT(.\Listings\lcd_disp
                    -lay.lst) OBJECT(.\output\lcd_display.obj)

line level    source

   1          #include "lcd_display.h"
   2          #include "ht1621b.h"
   3          #include "delay.h"
   4          #include "key.h"
   5          #include "uart.h"
   6          #include "timer.h"
   7          
   8          #define COM1 0X01
   9          #define COM2 0X02
  10          #define COM3 0X04
  11          #define COM4 0X08
  12          #define COM_OFF 0x00
  13          
  14          u8 Blink_std = 0;
  15          u8 cali_display_std = 0;
  16          void lcd_ht1621b_on ( void )
  17          {
  18   1              ht1621_send_cmd ( LCD_ON );
  19   1      }
  20          
  21          void lcd_ht1621b_off ( void )
  22          {
  23   1              ht1621_send_cmd ( LCD_OFF );
  24   1      }
  25          
  26          void ht1621_all_display ( void )
  27          {
  28   1              u8 i = 0;
  29   1      
  30   1              for ( i = 0; i < 32; ++i ) //max seg 31
  31   1              {
  32   2                      ht1621_write_byte ( i,0x0F ); //置1为点亮 com全开
  33   2              }
  34   1              // release_ht1621b_pin();
  35   1      }
  36          
  37          void ht1621_all_clear ( void )
  38          {
  39   1              u8 i = 0;
  40   1      
  41   1              for ( i = 0; i < 32; ++i ) //max seg 31
  42   1              {
  43   2                      ht1621_write_byte ( i,0x00 ); //置1为点亮 com全关
  44   2              }
  45   1               //release_ht1621b_pin();
  46   1      }
  47          
  48          void init_lcd_ht1621b ( void )
  49          {
  50   1              ht1621_init_pin();
  51   1              
  52   1              ht1621_send_cmd ( BIAS );
C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       01/20/2021 11:03:33 PAGE 2   

  53   1              ht1621_send_cmd ( RC256 ); //RC256  XTAL_32K
  54   1              ht1621_send_cmd ( WDTDIS );
  55   1              ht1621_send_cmd ( TMDIS );
  56   1              ht1621_send_cmd ( SYSEN );
  57   1              ht1621_send_cmd ( LCD_ON );
  58   1              ht1621_all_clear();
  59   1              ht1621_all_display();
  60   1      }
  61          
  62          void lcd_turn_off_time ( void )
  63          {
  64   1              ht1621_write_byte ( 28,COM_OFF );
  65   1              ht1621_write_byte ( 31,COM_OFF );
  66   1      }
  67          
  68          //void lcd_display_time(u8 time_type)
  69          //{
  70          //      ht1621_write_byte(31,COM_OFF);  //old LCD
  71          //      ht1621_write_byte(28,COM_OFF);
  72          //      switch(time_type)
  73          //      {
  74          //              case TIMER_ON:          ht1621_write_byte(28,COM4);break;//选择com 选择SEG引脚  28为SEG28 COM4 0X08 显示ON
  75          //              case TIMER_0_5H:        ht1621_write_byte(31,COM2);break;
  76          //              case TIMER_1H:          ht1621_write_byte(31,COM3);break;
  77          //              case TIMER_2H:          ht1621_write_byte(31,COM4);break;
  78          //              case TIMER_4H:          ht1621_write_byte(28,COM2);break;
  79          //              case TIMER_8H:          ht1621_write_byte(28,COM3);break;
  80          //      }
  81          //}
  82          
  83          
  84          //void lcd_display_time ( u8 time_type )
  85          //{
  86          //      ht1621_write_byte ( 31,COM_OFF );
  87          //      ht1621_write_byte ( 28,COM_OFF );
  88          //      switch ( time_type )
  89          //      {
  90          //              case TIMER_ON:
  91          //                      ht1621_write_byte ( 28,COM4 );
  92          //                      break;//选择com 选择SEG引脚  28为SEG28 COM4 0X08 显示ON
  93          //              case TIMER_0_5H:
  94          //                      ht1621_write_byte ( 31,COM2 );
  95          //                      break;//0.5
  96          //              case TIMER_1H:
  97          //                      ht1621_write_byte ( 28,COM2 );
  98          //                      break;//1h
  99          //              case TIMER_2H:
 100          //                      ht1621_write_byte ( 31,COM3 );
 101          //                      break;//2h
 102          //              case TIMER_4H:
 103          //                      ht1621_write_byte ( 28,COM3 );
 104          //                      break;//4h
 105          //              case TIMER_8H:
 106          //                      ht1621_write_byte ( 31,COM4 );
 107          //                      break;//8h
 108          //      }
 109          //}
 110          
 111          void lcd_display_time ( u8 time_type )
 112          {
 113   1              ht1621_send_cmd ( LCD_ON );
 114   1              ht1621_write_byte ( 31,COM_OFF );
C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       01/20/2021 11:03:33 PAGE 3   

 115   1              ht1621_write_byte ( 28,COM_OFF );
 116   1              switch ( time_type )
 117   1              {
 118   2                      case TIMER_ON:
 119   2                              ht1621_write_byte ( 27,COM2|COM4 );
 120   2                              ht1621_write_byte ( 28,COM2|COM4|COM3 ); //ON
 121   2                          ht1621_write_byte ( 31,COM2|COM4 );
 122   2                              break;
 123   2                      case TIMER_0_5H:
 124   2                              ht1621_write_byte ( 27,COM2|COM4|COM1); //0.5H
 125   2                              ht1621_write_byte ( 28,COM2|COM4 );
 126   2                          ht1621_write_byte ( 31,COM2|COM4 );
 127   2                              break;
 128   2                      case TIMER_1H:
 129   2                              ht1621_write_byte ( 27,COM2|COM4|COM3 ); //1H
 130   2                              ht1621_write_byte ( 28,COM2|COM4 );
 131   2                          ht1621_write_byte ( 31,COM2|COM4 );
 132   2                              break;
 133   2                      case TIMER_2H:
 134   2                              ht1621_write_byte ( 27,COM2|COM4 );
 135   2                              ht1621_write_byte ( 28,COM2|COM4 );
 136   2                          ht1621_write_byte ( 31,COM2|COM4|COM1 );//2H
 137   2                              break;
 138   2                      case TIMER_4H:
 139   2                              ht1621_write_byte ( 27,COM2|COM4 );
 140   2                              ht1621_write_byte ( 28,COM2|COM4|COM1 );//4h
 141   2                          ht1621_write_byte ( 31,COM2|COM4 );
 142   2                              break;
 143   2                      case TIMER_8H:
 144   2                              ht1621_write_byte ( 27,COM2|COM4 );
 145   2                              ht1621_write_byte ( 28,COM2|COM4 );
 146   2                          ht1621_write_byte ( 31,COM2|COM4|COM3 );//8H
 147   2                              break;
 148   2              }
 149   1      }
 150          
 151          void lcd_display_gap ( u8 gap )
 152          {
 153   1              ht1621_send_cmd ( LCD_ON );
 154   1              ht1621_write_byte ( 29,0x00 );
 155   1              ht1621_write_byte ( 30,0x00 );
 156   1              if (cali_display_std == 1)
 157   1              {       
 158   2              if (Blink_std == 0)     
 159   2              {
 160   3                      ht1621_write_byte ( 29,COM2|COM3 );
 161   3                      ht1621_write_byte ( 30,COM2|COM3|COM4 );
 162   3                      Blink_std = 1;
 163   3              }
 164   2              else 
 165   2              {
 166   3                      Blink_std = 0;
 167   3                              ht1621_write_byte ( 28,COM_OFF );
 168   3                              ht1621_write_byte ( 31,COM_OFF );
 169   3              }
 170   2       }
 171   1              else if ( gap == 1 )
 172   1              {
 173   2                      ht1621_write_byte ( 29,COM2|COM3 );
 174   2              }
 175   1              else if ( gap == 2 )
 176   1              {
C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       01/20/2021 11:03:33 PAGE 4   

 177   2                      ht1621_write_byte ( 29,COM1|COM2|COM4 );
 178   2                      ht1621_write_byte ( 30,COM3|COM4 );
 179   2              }
 180   1              else if ( gap == 3 )
 181   1              {
 182   2                      ht1621_write_byte ( 29,COM1|COM2|COM3|COM4 );
 183   2                      ht1621_write_byte ( 30,COM3 );
 184   2              }
 185   1              else if ( gap == 4 )
 186   1              {
 187   2                      ht1621_write_byte ( 29,COM2|COM3 );
 188   2                      ht1621_write_byte ( 30,COM2|COM3 );
 189   2              }
 190   1              else if ( gap == 5 )
 191   1              {
 192   2                      ht1621_write_byte ( 29,COM1|COM3|COM4 );
 193   2                      ht1621_write_byte ( 30,COM2|COM3 );
 194   2              }
 195   1              else if ( gap == 6 )
 196   1              {
 197   2                      ht1621_write_byte ( 29,COM1|COM3|COM4 );
 198   2                      ht1621_write_byte ( 30,COM2|COM3|COM4 );
 199   2              }
 200   1              else if ( gap == 7 )
 201   1              {
 202   2                      ht1621_write_byte ( 29,COM1|COM2|COM3 );
 203   2              }
 204   1              else if ( gap == 8 )
 205   1              {
 206   2                      ht1621_write_byte ( 29,COM1|COM2|COM3|COM4 );
 207   2                      ht1621_write_byte ( 30,COM2|COM3|COM4 );
 208   2              }
 209   1              else if ( gap == 9 )
 210   1              {
 211   2                      ht1621_write_byte ( 29,COM1|COM2|COM3|COM4 );
 212   2                      ht1621_write_byte ( 30,COM2|COM3 );
 213   2              }
 214   1              else if ( gap == Error_STD )
 215   1              {
 216   2                      if ( Blink_std == 0 )
 217   2                      {
 218   3                              ht1621_write_byte ( 29,COM1 );
 219   3                              ht1621_write_byte ( 30,COM2|COM3|COM4 );
 220   3                              Blink_std = 1;
 221   3                       led_set_on();
 222   3                      }
 223   2                      else
 224   2                      {
 225   3                              Blink_std = 0;
 226   3                              led_set_off();
 227   3                              ht1621_write_byte ( 28,COM_OFF );
 228   3                              ht1621_write_byte ( 31,COM_OFF );
 229   3                      }
 230   2              }
 231   1              else if ( gap == Error_Res_STD )
 232   1              {
 233   2                      if ( Blink_std == 0 )
 234   2                      {
 235   3                              ht1621_write_byte ( 29,COM1|COM4 );
 236   3                              ht1621_write_byte ( 30,COM3|COM4|COM2 );
 237   3                               led_set_on();
 238   3                              Blink_std = 1;
C51 COMPILER V9.56.0.0   LCD_DISPLAY                                                       01/20/2021 11:03:33 PAGE 5   

 239   3                      }
 240   2                      else
 241   2                      {
 242   3                              Blink_std = 0;
 243   3                              led_set_off();
 244   3                              ht1621_write_byte ( 28,COM_OFF );
 245   3                              ht1621_write_byte ( 31,COM_OFF );
 246   3                      }
 247   2              }
 248   1              
 249   1      }
 250          
 251          //
 252          //void flick(void)
 253          //{
 254          //
 255          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    598    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
