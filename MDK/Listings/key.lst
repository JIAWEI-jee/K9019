C51 COMPILER V9.56.0.0   KEY                                                               01/20/2021 11:03:33 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\output\key.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\HAEDWARE\Key\key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..
                    -\source;..\HAEDWARE\Flash;..\HAEDWARE\DELAY;..\HAEDWARE\HT1621B;..\HAEDWARE\Uart;..\HAEDWARE\Key;..\HAEDWARE\Timer;..\HA
                    -EDWARE\Pwm;..\HAEDWARE\ADC;..\HAEDWARE\WDT;..\HAEDWARE\product) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\ou
                    -tput\key.obj)

line level    source

   1          #include "key.h"
   2          #include "delay.h"
   3          #include "flash.h"
   4          #include "timer.h"
   5          u8 calibration_std = 0;
   6          #define KEY_PRESS_TIME 700
   7          
   8          void key_init(void)
   9          {
  10   1              P3M5 = 0x61;                        //P35¨¦¨¨???a¡¤?¨º??¨¹¨¬?¨ºy¡Á?¡ä?¨¦?¨¤-¨º?¨¨?
  11   1              P2M5 = 0x61;                        //P25¨¦¨¨???a¡¤?¨º??¨¹¨¬?¨ºy¡Á?¡ä?¨¦?¨¤-¨º?¨¨?
  12   1              P2M6 = 0x61;                        //P26¨¦¨¨???a¡¤?¨º??¨¹¨¬?¨ºy¡Á?¡ä?¨¦?¨¤-¨º?¨¨?
  13   1              P0M2 = 0x61;                        //P02¨¦¨¨???a¡¤?¨º??¨¹¨¬?¨ºy¡Á?¡ä?¨¦?¨¤-¨º?¨¨?
  14   1              P2M7 = 0XC1;                        //¨¦¨¨???a¨ª?¨ª¨¬¨º?3?
  15   1              P0M0 = 0XC1;                        //¨¦¨¨???a¨ª?¨ª¨¬¨º?3?
  16   1              P2M1 = 0X51;                        //¨¦¨¨????¡¤?¨º??¨¹¨¬?¡ä???¨¤-¨º?¨¨?
  17   1      }
  18          
  19          
  20          static unsigned char key_driver(void) 
  21          {     
  22   1          static unsigned char key_state = 0;         
  23   1          static unsigned int key_time = 0;           
  24   1          unsigned char key_press, key_return; 
  25   1       
  26   1          key_return = N_KEY;                         
  27   1       
  28   1           key_press = KEY_1; 
  29   1          switch (key_state)     
  30   1          {       
  31   2              case KEY_STATE_0:                       
  32   2                  if (key_press == 0)                     
  33   2                  {
  34   3                      key_time = 0;                   
  35   3                      key_state = KEY_STATE_1;       
  36   3                  }        
  37   2                  break;
  38   2       
  39   2              case KEY_STATE_1:                       
  40   2                  if (key_press == 0)                     
  41   2                  {
  42   3                      key_time++;                     
  43   3                      if(key_time>=SINGLE_KEY_TIME)   
  44   3                      {
  45   4                          key_state = KEY_STATE_2;    
  46   4                      }
  47   3                                      delay_ms(10);
  48   3                  }         
  49   2                  else key_state = KEY_STATE_0;       
  50   2                  break; 
  51   2       
  52   2              case KEY_STATE_2:                       
C51 COMPILER V9.56.0.0   KEY                                                               01/20/2021 11:03:33 PAGE 2   

  53   2                  if(key_press == 1)                       
  54   2                  { 
  55   3                       key_return = KEY_1_SHORT;            
  56   3                       key_state = KEY_STATE_0;       
  57   3                  } 
  58   2                  else
  59   2                  {
  60   3                      key_time++;                     
  61   3       
  62   3                      if(key_time >= LONG_KEY_TIME)   
  63   3                      {
  64   4                          key_return = KEY_1_LONG;         
  65   4                          key_state = KEY_STATE_3;    
  66   4                      }
  67   3                                      delay_ms(10);
  68   3                  }
  69   2                  break;
  70   2       
  71   2            case KEY_STATE_3:                         
  72   2                if (key_press == 1) 
  73   2                {
  74   3                    key_state = KEY_STATE_0;          
  75   3                }         
  76   2                break; 
  77   2       
  78   2              default:                               
  79   2                  key_state = KEY_STATE_0;
  80   2                  break;
  81   2          }
  82   1       
  83   1          return key_return;                         
  84   1      
  85   1      }
  86          static unsigned char Calibration_key_driver ( void )
  87          {
  88   1              static unsigned char key_state = 0;
  89   1              static unsigned int key_time = 0;
  90   1              unsigned char key_press, key_return;
  91   1      
  92   1              key_return = N_KEY;
  93   1      
  94   1              key_press = KEY_2;
  95   1              switch ( key_state )
  96   1              {
  97   2                      case KEY_STATE_0:
  98   2                              if ( key_press == 0 )
  99   2                              {
 100   3                                      key_time = 0;
 101   3                                      key_state = KEY_STATE_1;
 102   3                              }
 103   2                              break;
 104   2      
 105   2                      case KEY_STATE_1:
 106   2                              if ( key_press == 0 )
 107   2                              {
 108   3                                      key_time++;
 109   3                                      if ( key_time>=SINGLE_KEY_TIME )
 110   3                                      {
 111   4                                              key_state = KEY_STATE_2;
 112   4                                      }
 113   3                                      delay_ms ( 10 );
 114   3                              }
C51 COMPILER V9.56.0.0   KEY                                                               01/20/2021 11:03:33 PAGE 3   

 115   2                              else
 116   2                              {
 117   3                                      key_state = KEY_STATE_0;
 118   3                              }
 119   2                              break;
 120   2      
 121   2                      case KEY_STATE_2:
 122   2                              if ( key_press == 1 )
 123   2                              {
 124   3                                      key_return = KEY_1_SHORT;
 125   3                                      key_state = KEY_STATE_0;
 126   3                              }
 127   2                              else
 128   2                              {
 129   3                                      key_time++;
 130   3      
 131   3                                      if ( key_time >=  LONG_KEY_CALI_TIME )
 132   3                                      {
 133   4                                              key_return = KEY_CALI2_LONG;
 134   4                                              key_state = KEY_STATE_3;
 135   4                                      }
 136   3                                      delay_ms ( 10 );
 137   3                              }
 138   2                              break;
 139   2      
 140   2                      case KEY_STATE_3:
 141   2                              if ( key_press == 1 )
 142   2                              {
 143   3                                      key_state = KEY_STATE_0;
 144   3                              }
 145   2                              break;
 146   2      
 147   2                      default:
 148   2                              key_state = KEY_STATE_0;
 149   2                              break;
 150   2              }
 151   1      
 152   1              return key_return;
 153   1      
 154   1      }
 155          
 156          u8 key_scan ( void )
 157          {
 158   1              static u8 key_up = 1;
 159   1      
 160   1              if ( key_driver() == KEY_1_LONG )
 161   1              {
 162   2                      return KEY_1_PRES;
 163   2              }
 164   1              else if ( key_up && ( KEY_1 == 0 ) )
 165   1              {
 166   2                      delay_ms ( 50 );
 167   2                      key_up=0;
 168   2                      return LED_STAY_ON;
 169   2              }
 170   1      if(Calibration_key_driver() ==  KEY_CALI2_LONG)
 171   1              {
 172   2                      if ( ( get_device_state (  )  == OFF ) && ( flash_info.correct_std == 0 ) )
 173   2                      {
 174   3                              calibration_std = 1;
 175   3                              flash_info.correct_std = 1;
 176   3                              flah_save_data();
C51 COMPILER V9.56.0.0   KEY                                                               01/20/2021 11:03:33 PAGE 4   

 177   3                      }
 178   2                      else
 179   2                      {
 180   3                              calibration_std = 0;
 181   3                      }
 182   2              }
 183   1              else if ( key_up && ( KEY_2 == 0 || KEY_3 == 0 ) && ( calibration_std == 0 ) )
 184   1              {
 185   2                      delay_ms ( 50 );
 186   2                      key_up=0;
 187   2                      if ( KEY_2 == 0 )
 188   2                      {
 189   3                              return KEY_3_PRES;
 190   3                      }
 191   2                      else if ( KEY_3 == 0 )
 192   2                      {
 193   3                              return KEY_2_PRES;
 194   3                      }
 195   2              }
 196   1              else if ( ( KEY_2 == 1 ) && ( KEY_3 == 1 ) && ( KEY_1 == 1 ) )
 197   1              {
 198   2                      key_up=1;
 199   2              }
 200   1      
 201   1              return 0;
 202   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    532    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
